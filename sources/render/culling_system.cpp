#include "culling_system.hpp"

namespace brUGE
{
namespace render
{

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::CullingSystem()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::~CullingSystem()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	bool CullingSystem::init(const pugi::xml_node& cfg)
	{
		//-- ToDo:
		return true;
	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::update(Handle world, const DeltaTime& dt)
	{
		//-- ToDo:
	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::process(Handle context)
	{
		//-- ToDo:
	}

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::World::World(const ISystem& system, Handle universeWorld)
		:	IWorld(system, universeWorld)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::World::~World()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	bool CullingSystem::World::init(const pugi::xml_node& cfg)
	{

		return true;
	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::activate()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::deactivate()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::onGameObjectAdded(Handle gameObj)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::onGameObjectRemoved(Handle gameObj)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::onComponentAdded(IComponent::Handle component)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	void CullingSystem::World::onComponentRemoved(IComponent::Handle component)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::Context::Context(const ISystem& system, const IWorld& world)
		:	IContext(system, world)
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	CullingSystem::Context::~Context()
	{

	}

	//------------------------------------------------------------------------------------------------------------------
	bool CullingSystem::Context::init(const Config& cfg)
	{
		return true;
	}

	//------------------------------------------------------------------------------------------------------------------
}
}